import { useState } from 'react';
import { create as ipfsHttpClient } from 'ipfs-http-client';
import { ethers } from 'ethers'; // Import ethers.js

const projectId = process.env.NEXT_PUBLIC_PROJECT_ID;
const projectSecretKey = process.env.NEXT_PUBLIC_PROJECT_KEY;
const authorization = 'Basic ' + btoa(projectId + ':' + projectSecretKey);

function App() {
  const [uploadedImages, setUploadedImages] = useState([]);
  const ipfs = ipfsHttpClient({
    url: 'https://ipfs.infura.io:5001/api/v0',
    headers: {
      authorization,
    },
  });

  // Replace with your contract address and ABI
  const contractAddress = '0x0307dA205e77078E723520f78fC875Dc351354e0';
  const contractAbi = [{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_optimisticOracleV3",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "ipfsHash",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "asserter",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "assertionId",
            "type": "bytes32"
          }
        ],
        "name": "DataAsserted",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "assertionId",
            "type": "bytes32"
          }
        ],
        "name": "assertionDisputedCallback",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "assertionId",
            "type": "bytes32"
          },
          {
            "internalType": "bool",
            "name": "assertedTruthfully",
            "type": "bool"
          }
        ],
        "name": "assertionResolvedCallback",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "claims",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "defaultIdentifier",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "tokenAddress",
            "type": "address"
          }
        ],
        "name": "getMinimumBondForToken",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "initWill",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "registration",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "ipfsHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "tokenAddress",
            "type": "address"
          }
        ],
        "name": "startClaimWithMinBond",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testCall",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": {
      "object": "0x60a060405234801561001057600080fd5b50604051610e1b380380610e1b83398101604081905261002f916100b5565b600280546001600160a01b0319166001600160a01b0383169081179091556040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac91906100e5565b608052506100fe565b6000602082840312156100c757600080fd5b81516001600160a01b03811681146100de57600080fd5b9392505050565b6000602082840312156100f757600080fd5b5051919050565b608051610cfb610120600039600081816101b3015261045d0152610cfb6000f3fe6080604052600436106100865760003560e01c8063a888c2cd11610059578063a888c2cd1461012f578063b7f058361461016f578063d448a4ec14610183578063d509b017146101a1578063f1b156b2146101d557600080fd5b80633516dcd11461008b578063462f849c146100cb57806362130437146100e0578063700c3aae1461010f575b600080fd5b34801561009757600080fd5b506100b86100a63660046108bf565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b6100de6100d93660046108f4565b6101f5565b005b3480156100ec57600080fd5b506100de6100fb3660046108bf565b600090815260208190526040902060019055565b34801561011b57600080fd5b506100b861012a366004610929565b6104d2565b34801561013b57600080fd5b5061015f61014a3660046108bf565b60016020526000908152604090205460ff1681565b60405190151581526020016100c2565b34801561017b57600080fd5b50602a6100b8565b34801561018f57600080fd5b506100de61019e3660046108bf565b50565b3480156101ad57600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e157600080fd5b506100de6101f0366004610959565b610547565b60008381526020819052604081205490036102565760405162461bcd60e51b815260206004820152601760248201527f6861736865644964206e6f742072656769737465726564000000000000000000604482015260640160405180910390fd5b600254604051634360af3d60e01b81526001600160a01b0383811660048301526000921690634360af3d90602401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610989565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091506001600160a01b038316906323b872dd906064016020604051808303816000875af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f91906109a2565b5060025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906109a2565b5060008481526001602081905260408220805460ff191690911790556002546001600160a01b0316636457c9796103ed86610562565b6103f688610562565b6103ff336105a3565b610408426105fa565b610411306105a3565b6040516020016104259594939291906109ff565b60408051601f19818403018152908290526001600160e01b031960e084901b168252610487913390309060009062093a80908b908b907f0000000000000000000000000000000000000000000000000000000000000000908590600401610b5f565b6020604051808303816000875af11580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610989565b505050505050565b600254604051634360af3d60e01b81526001600160a01b0383811660048301526000921690634360af3d90602401602060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105419190610989565b92915050565b6002546001600160a01b0316331461055e57600080fd5b5050565b6060610571608083901c610726565b61057a83610726565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606105bb6001600160801b03602084901c16610726565b6105d68360601b6bffffffffffffffffffffffff1916610726565b60405160200161058d9291909182526001600160c01b031916602082015260280190565b6060816000036106215750506040805180820190915260018152600360fc1b602082015290565b8160005b811561064b578061063581610bfd565b91506106449050600a83610c2c565b9150610625565b60008167ffffffffffffffff81111561066657610666610c4e565b6040519080825280601f01601f191660200182016040528015610690576020820181803683370190505b509050815b851561071d576106a6600182610c64565b905060006106b5600a88610c2c565b6106c090600a610c77565b6106ca9088610c64565b6106d5906030610c96565b905060008160f81b9050808484815181106106f2576106f2610caf565b60200101906001600160f81b031916908160001a905350610714600a89610c2c565b97505050610695565b50949350505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f0808080808080808080808080808080808080808080808080808080808080808168161084157610841610c16565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b6000602082840312156108d157600080fd5b5035919050565b80356001600160a01b03811681146108ef57600080fd5b919050565b60008060006060848603121561090957600080fd5b8335925060208401359150610920604085016108d8565b90509250925092565b60006020828403121561093b57600080fd5b610944826108d8565b9392505050565b801515811461019e57600080fd5b6000806040838503121561096c57600080fd5b82359150602083013561097e8161094b565b809150509250929050565b60006020828403121561099b57600080fd5b5051919050565b6000602082840312156109b457600080fd5b81516109448161094b565b60005b838110156109da5781810151838201526020016109c2565b50506000910152565b600081516109f58185602086016109bf565b9290920192915050565b7f434c41494d3a2046696c6520696e204950465320686173682030780000000000815260008651610a3781601b850160208b016109bf565b7f2070726f76657320746865206465617468206f66206120706572736f6e207768601b91840191820152750de40ccead8ccd2d8d8e640e8d0ca40d0c2e6d04060f60531b603b8201528651610a93816051840160208b016109bf565b71040eed2e8d040c2e6e6cae4e8cae4744060f60731b605192909101918201528551610ac6816063840160208a016109bf565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b606392909101918201528451610af68160728401602089016109bf565b7f20696e207468652044617461417373657274657220636f6e7472616374206174607292909101918201526204060f60eb1b6092820152610b53610b3d60958301866109e3565b691034b9903b30b634b21760b11b8152600a0190565b98975050505050505050565b610120815260008a5180610120840152610b8181610140850160208f016109bf565b6001600160a01b039a8b166020840152988a16604083015250958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e0820193909352610100810192909252601f01601f19160161014001919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610c0f57610c0f610be7565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610c4957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b8181038181111561054157610541610be7565b6000816000190483118215151615610c9157610c91610be7565b500290565b60ff818116838216019081111561054157610541610be7565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203305f3619c6ed759bcd0c27e0cd1873cbb6162cb4df616f8395e17a982f096d164736f6c63430008100033",
      "sourceMap": "264:3228:4:-:0;;;570:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;620:2;:53;;-1:-1:-1;;;;;;620:53:4;-1:-1:-1;;;;;620:53:4;;;;;;;;703:22;;;-1:-1:-1;;;703:22:4;;;;:20;;:22;;;;;;;;;;;;;;;620:53;703:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;683:42;;-1:-1:-1;264:3228:4;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:184::-;379:6;432:2;420:9;411:7;407:23;403:32;400:52;;;448:1;445;438:12;400:52;-1:-1:-1;471:16:5;;309:184;-1:-1:-1;309:184:5:o;:::-;264:3228:4;;;;;;;;;;;;;;;;;",
      "linkReferences": {}
    },
    "deployedBytecode": {
      "object": "0x6080604052600436106100865760003560e01c8063a888c2cd11610059578063a888c2cd1461012f578063b7f058361461016f578063d448a4ec14610183578063d509b017146101a1578063f1b156b2146101d557600080fd5b80633516dcd11461008b578063462f849c146100cb57806362130437146100e0578063700c3aae1461010f575b600080fd5b34801561009757600080fd5b506100b86100a63660046108bf565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b6100de6100d93660046108f4565b6101f5565b005b3480156100ec57600080fd5b506100de6100fb3660046108bf565b600090815260208190526040902060019055565b34801561011b57600080fd5b506100b861012a366004610929565b6104d2565b34801561013b57600080fd5b5061015f61014a3660046108bf565b60016020526000908152604090205460ff1681565b60405190151581526020016100c2565b34801561017b57600080fd5b50602a6100b8565b34801561018f57600080fd5b506100de61019e3660046108bf565b50565b3480156101ad57600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e157600080fd5b506100de6101f0366004610959565b610547565b60008381526020819052604081205490036102565760405162461bcd60e51b815260206004820152601760248201527f6861736865644964206e6f742072656769737465726564000000000000000000604482015260640160405180910390fd5b600254604051634360af3d60e01b81526001600160a01b0383811660048301526000921690634360af3d90602401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610989565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091506001600160a01b038316906323b872dd906064016020604051808303816000875af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f91906109a2565b5060025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906109a2565b5060008481526001602081905260408220805460ff191690911790556002546001600160a01b0316636457c9796103ed86610562565b6103f688610562565b6103ff336105a3565b610408426105fa565b610411306105a3565b6040516020016104259594939291906109ff565b60408051601f19818403018152908290526001600160e01b031960e084901b168252610487913390309060009062093a80908b908b907f0000000000000000000000000000000000000000000000000000000000000000908590600401610b5f565b6020604051808303816000875af11580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610989565b505050505050565b600254604051634360af3d60e01b81526001600160a01b0383811660048301526000921690634360af3d90602401602060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105419190610989565b92915050565b6002546001600160a01b0316331461055e57600080fd5b5050565b6060610571608083901c610726565b61057a83610726565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606105bb6001600160801b03602084901c16610726565b6105d68360601b6bffffffffffffffffffffffff1916610726565b60405160200161058d9291909182526001600160c01b031916602082015260280190565b6060816000036106215750506040805180820190915260018152600360fc1b602082015290565b8160005b811561064b578061063581610bfd565b91506106449050600a83610c2c565b9150610625565b60008167ffffffffffffffff81111561066657610666610c4e565b6040519080825280601f01601f191660200182016040528015610690576020820181803683370190505b509050815b851561071d576106a6600182610c64565b905060006106b5600a88610c2c565b6106c090600a610c77565b6106ca9088610c64565b6106d5906030610c96565b905060008160f81b9050808484815181106106f2576106f2610caf565b60200101906001600160f81b031916908160001a905350610714600a89610c2c565b97505050610695565b50949350505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f0808080808080808080808080808080808080808080808080808080808080808168161084157610841610c16565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b6000602082840312156108d157600080fd5b5035919050565b80356001600160a01b03811681146108ef57600080fd5b919050565b60008060006060848603121561090957600080fd5b8335925060208401359150610920604085016108d8565b90509250925092565b60006020828403121561093b57600080fd5b610944826108d8565b9392505050565b801515811461019e57600080fd5b6000806040838503121561096c57600080fd5b82359150602083013561097e8161094b565b809150509250929050565b60006020828403121561099b57600080fd5b5051919050565b6000602082840312156109b457600080fd5b81516109448161094b565b60005b838110156109da5781810151838201526020016109c2565b50506000910152565b600081516109f58185602086016109bf565b9290920192915050565b7f434c41494d3a2046696c6520696e204950465320686173682030780000000000815260008651610a3781601b850160208b016109bf565b7f2070726f76657320746865206465617468206f66206120706572736f6e207768601b91840191820152750de40ccead8ccd2d8d8e640e8d0ca40d0c2e6d04060f60531b603b8201528651610a93816051840160208b016109bf565b71040eed2e8d040c2e6e6cae4e8cae4744060f60731b605192909101918201528551610ac6816063840160208a016109bf565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b606392909101918201528451610af68160728401602089016109bf565b7f20696e207468652044617461417373657274657220636f6e7472616374206174607292909101918201526204060f60eb1b6092820152610b53610b3d60958301866109e3565b691034b9903b30b634b21760b11b8152600a0190565b98975050505050505050565b610120815260008a5180610120840152610b8181610140850160208f016109bf565b6001600160a01b039a8b166020840152988a16604083015250958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e0820193909352610100810192909252601f01601f19160161014001919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610c0f57610c0f610be7565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610c4957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b8181038181111561054157610541610be7565b6000816000190483118215151615610c9157610c91610be7565b500290565b60ff818116838216019081111561054157610541610be7565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203305f3619c6ed759bcd0c27e0cd1873cbb6162cb4df616f8395e17a982f096d164736f6c63430008100033",
      "sourceMap": "264:3228:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:47;;;;;;;;;;-1:-1:-1;285:47:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;345:25:5;;;333:2;318:18;285:47:4;;;;;;;;1067:1438;;;;;;:::i;:::-;;:::i;:::-;;834:74;;;;;;;;;;-1:-1:-1;834:74:4;;;;;:::i;:::-;881:12;:16;;;;;;;;;;900:1;881:20;;834:74;914:147;;;;;;;;;;-1:-1:-1;914:147:4;;;;;:::i;:::-;;:::i;338:38::-;;;;;;;;;;-1:-1:-1;338:38:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1242:14:5;;1235:22;1217:41;;1205:2;1190:18;338:38:4;1077:187:5;738:70:4;;;;;;;;;;-1:-1:-1;799:2:4;738:70;;3424:65;;;;;;;;;;-1:-1:-1;3424:65:4;;;;;:::i;:::-;;;383:42;;;;;;;;;;;;;;;2555:672;;;;;;;;;;-1:-1:-1;2555:672:4;;;;;:::i;:::-;;:::i;1067:1438::-;1183:12;:16;;;;;;;;;;;:19;;1174:56;;;;-1:-1:-1;;;1174:56:4;;2275:2:5;1174:56:4;;;2257:21:5;2314:2;2294:18;;;2287:30;2353:25;2333:18;;;2326:53;2396:18;;1174:56:4;;;;;;;;1256:2;;:40;;-1:-1:-1;;;1256:40:4;;-1:-1:-1;;;;;2589:32:5;;;1256:40:4;;;2571:51:5;1241:12:4;;1256:2;;:17;;2544:18:5;;1256:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1306:66;;-1:-1:-1;;;1306:66:4;;1340:10;1306:66;;;3062:34:5;1360:4:4;3112:18:5;;;3105:43;3164:18;;;3157:34;;;1241:55:4;;-1:-1:-1;;;;;;1306:33:4;;;;;2997:18:5;;1306:66:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1419:2:4;;1382:47;;-1:-1:-1;;;1382:47:4;;-1:-1:-1;;;;;1419:2:4;;;1382:47;;;3626:51:5;3693:18;;;3686:34;;;1382:28:4;;;;;;3599:18:5;;1382:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1440:10:4;;;;1453:4;1440:10;;;;;;;:17;;-1:-1:-1;;1440:17:4;;;;;;1525:2;;-1:-1:-1;;;;;1525:2:4;:14;1634:40;1664:8;1634:21;:40::i;:::-;1766:34;1796:2;1766:21;:34::i;:::-;1856:40;1885:10;1856:28;:40::i;:::-;1949:42;1975:15;1949:25;:42::i;:::-;2064:43;2101:4;2064:28;:43::i;:::-;1553:598;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1553:598:4;;;;;;;;;;-1:-1:-1;;;;;;1525:973:4;;;;;;;;;2165:10;;2208:4;;2255:1;;2293:10;;2335:12;;2387:4;;2414:17;;2255:1;;1525:973;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1067:1438:4:o;914:147::-;1014:2;;:40;;-1:-1:-1;;;1014:40:4;;-1:-1:-1;;;;;2589:32:5;;;1014:40:4;;;2571:51:5;989:7:4;;1014:2;;:17;;2544:18:5;;1014:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1007:47;914:147;-1:-1:-1;;914:147:4:o;2555:672::-;2683:2;;-1:-1:-1;;;;;2683:2:4;2661:10;:25;2653:34;;;;;;2555:672;;:::o;2586:182:1:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;7791:19:5;;;;7826:12;;7819:28;7863:12;;2678:83:1;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:1;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;8041:19:5;;;-1:-1:-1;;;;;;8090:41:5;8085:2;8076:12;;8069:63;8157:2;8148:12;;7886:280;3569:546:1;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:1;;;;;;;;;;;;-1:-1:-1;;;3678:10:1;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:1;;-1:-1:-1;3805:2:1;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:1;-1:-1:-1;3827:34:1;-1:-1:-1;3883:3:1;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:1;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;4044:12:1;;;;;;;;-1:-1:-1;4070:7:1;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:1;3569:546;-1:-1:-1;;;;3569:546:1:o;897:1306::-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:1;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:1:o;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:5;;488:42;;478:70;;544:1;541;534:12;478:70;381:173;;;:::o;559:322::-;636:6;644;652;705:2;693:9;684:7;680:23;676:32;673:52;;;721:1;718;711:12;673:52;757:9;744:23;734:33;;814:2;803:9;799:18;786:32;776:42;;837:38;871:2;860:9;856:18;837:38;:::i;:::-;827:48;;559:322;;;;;:::o;886:186::-;945:6;998:2;986:9;977:7;973:23;969:32;966:52;;;1014:1;1011;1004:12;966:52;1037:29;1056:9;1037:29;:::i;:::-;1027:39;886:186;-1:-1:-1;;;886:186:5:o;1636:118::-;1722:5;1715:13;1708:21;1701:5;1698:32;1688:60;;1744:1;1741;1734:12;1759:309;1824:6;1832;1885:2;1873:9;1864:7;1860:23;1856:32;1853:52;;;1901:1;1898;1891:12;1853:52;1937:9;1924:23;1914:33;;1997:2;1986:9;1982:18;1969:32;2010:28;2032:5;2010:28;:::i;:::-;2057:5;2047:15;;;1759:309;;;;;:::o;2633:184::-;2703:6;2756:2;2744:9;2735:7;2731:23;2727:32;2724:52;;;2772:1;2769;2762:12;2724:52;-1:-1:-1;2795:16:5;;2633:184;-1:-1:-1;2633:184:5:o;3202:245::-;3269:6;3322:2;3310:9;3301:7;3297:23;3293:32;3290:52;;;3338:1;3335;3328:12;3290:52;3370:9;3364:16;3389:28;3411:5;3389:28;:::i;3731:250::-;3816:1;3826:113;3840:6;3837:1;3834:13;3826:113;;;3916:11;;;3910:18;3897:11;;;3890:39;3862:2;3855:10;3826:113;;;-1:-1:-1;;3973:1:5;3955:16;;3948:27;3731:250::o;3986:197::-;4027:3;4065:5;4059:12;4080:65;4138:6;4133:3;4126:4;4119:5;4115:16;4080:65;:::i;:::-;4161:16;;;;;3986:197;-1:-1:-1;;3986:197:5:o;4317:2019::-;5266:29;5261:3;5254:42;5236:3;5325:6;5319:13;5341:75;5409:6;5404:2;5399:3;5395:12;5388:4;5380:6;5376:17;5341:75;:::i;:::-;5480:34;5475:2;5435:16;;;5467:11;;;5460:55;-1:-1:-1;;;5539:2:5;5531:11;;5524:45;5594:13;;5616:76;5594:13;5678:2;5670:11;;5663:4;5651:17;;5616:76;:::i;:::-;-1:-1:-1;;;5752:2:5;5711:17;;;;5744:11;;;5737:41;5803:13;;5825:76;5803:13;5887:2;5879:11;;5872:4;5860:17;;5825:76;:::i;:::-;-1:-1:-1;;;5961:2:5;5920:17;;;;5953:11;;;5946:38;6009:13;;6031:77;6009:13;6093:3;6085:12;;6078:4;6066:17;;6031:77;:::i;:::-;6174:34;6168:3;6127:17;;;;6160:12;;;6153:56;-1:-1:-1;;;6233:3:5;6225:12;;6218:27;6261:69;6291:38;6324:3;6316:12;;6308:6;6291:38;:::i;:::-;-1:-1:-1;;;4253:25:5;;4303:2;4294:12;;4188:124;6261:69;6254:76;4317:2019;-1:-1:-1;;;;;;;;4317:2019:5:o;6341:1099::-;6737:3;6726:9;6719:22;6700:4;6770:6;6764:13;6814:6;6808:3;6797:9;6793:19;6786:35;6830:82;6905:6;6899:3;6888:9;6884:19;6877:4;6869:6;6865:17;6830:82;:::i;:::-;-1:-1:-1;;;;;7060:15:5;;;7053:4;7038:20;;7031:45;7112:15;;;7107:2;7092:18;;7085:43;-1:-1:-1;7164:15:5;;;7159:2;7144:18;;7137:43;7229:18;7217:31;;;;7211:3;7196:19;;7189:60;7286:15;;;;7011:3;7265:19;;7258:44;7333:3;7318:19;;7311:35;;;;7377:3;7362:19;;7355:35;;;;7421:3;7406:19;;7399:35;;;;6973:2;6952:15;-1:-1:-1;;6948:29:5;6933:45;6980:3;6929:55;;6341:1099;-1:-1:-1;6341:1099:5:o;8171:127::-;8232:10;8227:3;8223:20;8220:1;8213:31;8263:4;8260:1;8253:15;8287:4;8284:1;8277:15;8303:135;8342:3;8363:17;;;8360:43;;8383:18;;:::i;:::-;-1:-1:-1;8430:1:5;8419:13;;8303:135::o;8443:127::-;8504:10;8499:3;8495:20;8492:1;8485:31;8535:4;8532:1;8525:15;8559:4;8556:1;8549:15;8575:217;8615:1;8641;8631:132;;8685:10;8680:3;8676:20;8673:1;8666:31;8720:4;8717:1;8710:15;8748:4;8745:1;8738:15;8631:132;-1:-1:-1;8777:9:5;;8575:217::o;8797:127::-;8858:10;8853:3;8849:20;8846:1;8839:31;8889:4;8886:1;8879:15;8913:4;8910:1;8903:15;8929:128;8996:9;;;9017:11;;;9014:37;;;9031:18;;:::i;9062:168::-;9102:7;9168:1;9164;9160:6;9156:14;9153:1;9150:21;9145:1;9138:9;9131:17;9127:45;9124:71;;;9175:18;;:::i;:::-;-1:-1:-1;9215:9:5;;9062:168::o;9235:148::-;9323:4;9302:12;;;9316;;;9298:31;;9341:13;;9338:39;;;9357:18;;:::i;9388:127::-;9449:10;9444:3;9440:20;9437:1;9430:31;9480:4;9477:1;9470:15;9504:4;9501:1;9494:15",
      "linkReferences": {},
      "immutableReferences": {
        "693": [
          {
            "start": 435,
            "length": 32
          },
          {
            "start": 1117,
            "length": 32
          }
        ]
      }
    },
    "methodIdentifiers": {
      "assertionDisputedCallback(bytes32)": "d448a4ec",
      "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
      "claims(uint256)": "a888c2cd",
      "defaultIdentifier()": "d509b017",
      "getMinimumBondForToken(address)": "700c3aae",
      "initWill(uint256)": "62130437",
      "registration(uint256)": "3516dcd1",
      "startClaimWithMinBond(uint256,uint256,address)": "462f849c",
      "testCall()": "b7f05836"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ipfsHash\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getMinimumBondForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"initWill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ipfsHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"startClaimWithMinBond\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dethLegacy.sol\":\"DETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/@uma/common/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/@uma/common/node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0xf8427cb144e47a47625df27e5182bd8f3774becf23d67fd16e51599bd1386bc5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://63d4212d86dfc755e5eead59e05038aaf889be3e9daee9fd9a8070825c7b8b8f\",\"dweb:/ipfs/QmQ87qqtqhSQdfdEjT3wPGSitQ9uPoyYToVu9WTECqYsQP\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]},\"src/dethLegacy.sol\":{\"keccak256\":\"0x6723655ba0b4d75c2555197b44961b601e0103255d0ece11d17a7d5de23cb5d5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6d386193b5e487ebcf84174a30cb9da909aa75c39f4ea487f617f445e7444668\",\"dweb:/ipfs/QmWU4FJqjEai7xmsYAaYktPXNFGUv8wFgjTfzTFiNiW3sU\"]}},\"version\":1}",
    "metadata": {
      "compiler": {
        "version": "0.8.16+commit.07a7930e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_optimisticOracleV3",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "ipfsHash",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "address",
                "name": "asserter",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "bytes32",
                "name": "assertionId",
                "type": "bytes32",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "DataAsserted",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "assertionId",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "assertionDisputedCallback"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "assertionId",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "assertedTruthfully",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "assertionResolvedCallback"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "claims",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "defaultIdentifier",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "tokenAddress",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "getMinimumBondForToken",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "initWill"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "registration",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ipfsHash",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "tokenAddress",
                "type": "address"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "startClaimWithMinBond"
          },
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "testCall",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
      "settings": {
        "remappings": [
          "@across-protocol/=node_modules/@across-protocol/",
          "@ensdomains/=node_modules/@ensdomains/",
          "@eth-optimism/=node_modules/@across-protocol/contracts/node_modules/@eth-optimism/",
          "@gnosis.pm/=node_modules/@gnosis.pm/",
          "@maticnetwork/=node_modules/@maticnetwork/",
          "@openzeppelin/=node_modules/@openzeppelin/",
          "@uma/=node_modules/@uma/",
          "@uniswap/=node_modules/@uniswap/",
          "base64-sol/=node_modules/base64-sol/",
          "ds-test/=lib/forge-std/lib/ds-test/src/",
          "eth-gas-reporter/=node_modules/@uma/common/node_modules/eth-gas-reporter/",
          "forge-std/=lib/forge-std/src/",
          "hardhat-deploy/=node_modules/@uma/common/node_modules/hardhat-deploy/",
          "hardhat/=node_modules/hardhat/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/"
        ],
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "compilationTarget": {
          "src/dethLegacy.sol": "DETH"
        },
        "libraries": {}
      },
      "sources": {
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
          "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
          "urls": [
            "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
            "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
          ],
          "license": "MIT"
        },
        "node_modules/@uma/core/contracts/common/implementation/AncillaryData.sol": {
          "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
          "urls": [
            "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
            "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
          ],
          "license": "AGPL-3.0-only"
        },
        "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
          "keccak256": "0xf8427cb144e47a47625df27e5182bd8f3774becf23d67fd16e51599bd1386bc5",
          "urls": [
            "bzz-raw://63d4212d86dfc755e5eead59e05038aaf889be3e9daee9fd9a8070825c7b8b8f",
            "dweb:/ipfs/QmQ87qqtqhSQdfdEjT3wPGSitQ9uPoyYToVu9WTECqYsQP"
          ],
          "license": "AGPL-3.0-only"
        },
        "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
          "keccak256": "0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00",
          "urls": [
            "bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871",
            "dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X"
          ],
          "license": "AGPL-3.0-only"
        },
        "src/dethLegacy.sol": {
          "keccak256": "0x6723655ba0b4d75c2555197b44961b601e0103255d0ece11d17a7d5de23cb5d5",
          "urls": [
            "bzz-raw://6d386193b5e487ebcf84174a30cb9da909aa75c39f4ea487f617f445e7444668",
            "dweb:/ipfs/QmWU4FJqjEai7xmsYAaYktPXNFGUv8wFgjTfzTFiNiW3sU"
          ],
          "license": "GPL-3.0"
        }
      },
      "version": 1
    },
    "ast": {
      "absolutePath": "src/dethLegacy.sol",
      "id": 920,
      "exportedSymbols": {
        "ClaimData": [
          485
        ],
        "DETH": [
          919
        ],
        "IERC20": [
          77
        ],
        "OptimisticOracleV3Interface": [
          679
        ]
      },
      "nodeType": "SourceUnit",
      "src": "64:3428:4",
      "nodes": [
        {
          "id": 681,
          "nodeType": "PragmaDirective",
          "src": "64:23:4",
          "nodes": [],
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ]
        },
        {
          "id": 682,
          "nodeType": "ImportDirective",
          "src": "89:79:4",
          "nodes": [],
          "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
          "file": "@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 920,
          "sourceUnit": 490,
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "id": 683,
          "nodeType": "ImportDirective",
          "src": "169:93:4",
          "nodes": [],
          "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
          "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 920,
          "sourceUnit": 680,
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "id": 919,
          "nodeType": "ContractDefinition",
          "src": "264:3228:4",
          "nodes": [
            {
              "id": 687,
              "nodeType": "VariableDeclaration",
              "src": "285:47:4",
              "nodes": [],
              "constant": false,
              "functionSelector": "3516dcd1",
              "mutability": "mutable",
              "name": "registration",
              "nameLocation": "320:12:4",
              "scope": 919,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "typeName": {
                "id": 686,
                "keyType": {
                  "id": 684,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "285:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 685,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "id": 691,
              "nodeType": "VariableDeclaration",
              "src": "338:38:4",
              "nodes": [],
              "constant": false,
              "functionSelector": "a888c2cd",
              "mutability": "mutable",
              "name": "claims",
              "nameLocation": "370:6:4",
              "scope": 919,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "typeName": {
                "id": 690,
                "keyType": {
                  "id": 688,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "338:24:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 689,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "id": 693,
              "nodeType": "VariableDeclaration",
              "src": "383:42:4",
              "nodes": [],
              "constant": false,
              "functionSelector": "d509b017",
              "mutability": "immutable",
              "name": "defaultIdentifier",
              "nameLocation": "408:17:4",
              "scope": 919,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              },
              "typeName": {
                "id": 692,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "383:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "visibility": "public"
            },
            {
              "id": 696,
              "nodeType": "VariableDeclaration",
              "src": "431:30:4",
              "nodes": [],
              "constant": false,
              "mutability": "mutable",
              "name": "oo",
              "nameLocation": "459:2:4",
              "scope": 919,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                "typeString": "contract OptimisticOracleV3Interface"
              },
              "typeName": {
                "id": 695,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 694,
                  "name": "OptimisticOracleV3Interface",
                  "nameLocations": [
                    "431:27:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 679,
                  "src": "431:27:4"
                },
                "referencedDeclaration": 679,
                "src": "431:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                  "typeString": "contract OptimisticOracleV3Interface"
                }
              },
              "visibility": "internal"
            },
            {
              "id": 706,
              "nodeType": "EventDefinition",
              "src": "468:96:4",
              "nodes": [],
              "anonymous": false,
              "eventSelector": "53482cedcdd49bddebda2d6574937dfeec43168181a0302652117a0a60cd72e7",
              "name": "DataAsserted",
              "nameLocation": "474:12:4",
              "parameters": {
                "id": 705,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 698,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "id",
                    "nameLocation": "495:2:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 706,
                    "src": "487:10:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 697,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "487:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 700,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "ipfsHash",
                    "nameLocation": "507:8:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 706,
                    "src": "499:16:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 699,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "499:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 702,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "asserter",
                    "nameLocation": "533:8:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 706,
                    "src": "517:24:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 701,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "517:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 704,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "assertionId",
                    "nameLocation": "551:11:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 706,
                    "src": "543:19:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 703,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "543:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "486:77:4"
              }
            },
            {
              "id": 724,
              "nodeType": "FunctionDefinition",
              "src": "570:162:4",
              "nodes": [],
              "body": {
                "id": 723,
                "nodeType": "Block",
                "src": "610:122:4",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 711,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "620:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 713,
                            "name": "_optimisticOracleV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "653:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 712,
                          "name": "OptimisticOracleV3Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "625:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$679_$",
                            "typeString": "type(contract OptimisticOracleV3Interface)"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "625:48:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "src": "620:53:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "id": 716,
                    "nodeType": "ExpressionStatement",
                    "src": "620:53:4"
                  },
                  {
                    "expression": {
                      "id": 721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 717,
                        "name": "defaultIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "683:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 718,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "703:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "706:17:4",
                          "memberName": "defaultIdentifier",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 542,
                          "src": "703:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "703:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "683:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 722,
                    "nodeType": "ExpressionStatement",
                    "src": "683:42:4"
                  }
                ]
              },
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "parameters": {
                "id": 709,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 708,
                    "mutability": "mutable",
                    "name": "_optimisticOracleV3",
                    "nameLocation": "590:19:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 724,
                    "src": "582:27:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 707,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "582:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "581:29:4"
              },
              "returnParameters": {
                "id": 710,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "610:0:4"
              },
              "scope": 919,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 732,
              "nodeType": "FunctionDefinition",
              "src": "738:70:4",
              "nodes": [],
              "body": {
                "id": 731,
                "nodeType": "Block",
                "src": "782:26:4",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "hexValue": "3432",
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "799:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42_by_1",
                        "typeString": "int_const 42"
                      },
                      "value": "42"
                    },
                    "functionReturnParameters": 728,
                    "id": 730,
                    "nodeType": "Return",
                    "src": "792:9:4"
                  }
                ]
              },
              "functionSelector": "b7f05836",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "testCall",
              "nameLocation": "747:8:4",
              "parameters": {
                "id": 725,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "755:2:4"
              },
              "returnParameters": {
                "id": 728,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 727,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 732,
                    "src": "774:7:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 726,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "774:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "773:9:4"
              },
              "scope": 919,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 744,
              "nodeType": "FunctionDefinition",
              "src": "834:74:4",
              "nodes": [],
              "body": {
                "id": 743,
                "nodeType": "Block",
                "src": "871:37:4",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 737,
                          "name": "registration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "881:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 739,
                        "indexExpression": {
                          "id": 738,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "894:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "881:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "881:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 742,
                    "nodeType": "ExpressionStatement",
                    "src": "881:20:4"
                  }
                ]
              },
              "functionSelector": "62130437",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "initWill",
              "nameLocation": "843:8:4",
              "parameters": {
                "id": 735,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 734,
                    "mutability": "mutable",
                    "name": "id",
                    "nameLocation": "860:2:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 744,
                    "src": "852:10:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 733,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "852:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "851:12:4"
              },
              "returnParameters": {
                "id": 736,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "871:0:4"
              },
              "scope": 919,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 760,
              "nodeType": "FunctionDefinition",
              "src": "914:147:4",
              "nodes": [],
              "body": {
                "id": 759,
                "nodeType": "Block",
                "src": "997:64:4",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 755,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 746,
                              "src": "1040:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1032:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 753,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1032:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1032:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 751,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "1014:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1017:14:4",
                        "memberName": "getMinimumBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 624,
                        "src": "1014:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1014:40:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 750,
                    "id": 758,
                    "nodeType": "Return",
                    "src": "1007:47:4"
                  }
                ]
              },
              "functionSelector": "700c3aae",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getMinimumBondForToken",
              "nameLocation": "923:22:4",
              "parameters": {
                "id": 747,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 746,
                    "mutability": "mutable",
                    "name": "tokenAddress",
                    "nameLocation": "954:12:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 760,
                    "src": "946:20:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 745,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "946:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "945:22:4"
              },
              "returnParameters": {
                "id": 750,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 749,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 760,
                    "src": "989:7:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 748,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "989:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "988:9:4"
              },
              "scope": 919,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 891,
              "nodeType": "FunctionDefinition",
              "src": "1067:1438:4",
              "nodes": [],
              "body": {
                "id": 890,
                "nodeType": "Block",
                "src": "1164:1341:4",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 770,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 687,
                              "src": "1183:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 772,
                            "indexExpression": {
                              "id": 771,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "1196:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1183:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1201:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1183:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "6861736865644964206e6f742072656769737465726564",
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1204:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d786b6c77f6516cfd097d1f54d41096281b2ad38680e06cf6e66f31a94597024",
                            "typeString": "literal_string \"hashedId not registered\""
                          },
                          "value": "hashedId not registered"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d786b6c77f6516cfd097d1f54d41096281b2ad38680e06cf6e66f31a94597024",
                            "typeString": "literal_string \"hashedId not registered\""
                          }
                        ],
                        "id": 769,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "1174:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1174:56:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 777,
                    "nodeType": "ExpressionStatement",
                    "src": "1174:56:4"
                  },
                  {
                    "assignments": [
                      779
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "bond",
                        "nameLocation": "1249:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1241:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1241:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 787,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 784,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "1282:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1274:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 782,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1274:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1274:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 780,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "1256:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1259:14:4",
                        "memberName": "getMinimumBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 624,
                        "src": "1256:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1256:40:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1241:55:4"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 792,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1340:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1344:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1340:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 796,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1360:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DETH_$919",
                                "typeString": "contract DETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DETH_$919",
                                "typeString": "contract DETH"
                              }
                            ],
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1352:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 794,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1352:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1352:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 798,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1367:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 789,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "1313:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 788,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1306:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1306:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1327:12:4",
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "1306:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1306:66:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 800,
                    "nodeType": "ExpressionStatement",
                    "src": "1306:66:4"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 807,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1419:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            ],
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1411:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 805,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1411:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1411:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 809,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "1424:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 802,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "1389:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 801,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1382:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1382:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1403:7:4",
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64,
                        "src": "1382:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1382:47:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 811,
                    "nodeType": "ExpressionStatement",
                    "src": "1382:47:4"
                  },
                  {
                    "expression": {
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 812,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "1440:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 814,
                        "indexExpression": {
                          "id": 813,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "1447:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1440:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1453:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1440:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 817,
                    "nodeType": "ExpressionStatement",
                    "src": "1440:17:4"
                  },
                  {
                    "assignments": [
                      819
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 819,
                        "mutability": "mutable",
                        "name": "assertionId",
                        "nameLocation": "1511:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1503:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 889,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "434c41494d3a2046696c6520696e20495046532068617368203078",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1587:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b89fa06ccacc6bb6ec543f97be1fffceaa943ee6d48b9cf87df6a9b988d16e04",
                                "typeString": "literal_string \"CLAIM: File in IPFS hash 0x\""
                              },
                              "value": "CLAIM: File in IPFS hash 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 829,
                                      "name": "ipfsHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 764,
                                      "src": "1664:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1656:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 827,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1656:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1656:17:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 825,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "1634:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$485_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1644:11:4",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 241,
                                "src": "1634:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1634:40:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2070726f76657320746865206465617468206f66206120706572736f6e2077686f2066756c66696c6c73207468652068617368203078",
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1692:56:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_172c3fd2228019efb98ec3f2a2c5a66fc125235737bab9a879e7fcead43f4104",
                                "typeString": "literal_string \" proves the death of a person who fulfills the hash 0x\""
                              },
                              "value": " proves the death of a person who fulfills the hash 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 837,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 762,
                                      "src": "1796:2:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 836,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1788:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 835,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1788:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 838,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1788:11:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 833,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "1766:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$485_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1776:11:4",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 241,
                                "src": "1766:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1766:34:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20776974682061737365727465723a203078",
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1818:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b0400798a3acf62cc5eeef3851dec9ab2b93bda77b3e6c708104a18261ef4db",
                                "typeString": "literal_string \" with asserter: 0x\""
                              },
                              "value": " with asserter: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 843,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1885:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1889:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1885:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 841,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "1856:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$485_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1866:18:4",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 274,
                                "src": "1856:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1856:40:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2061742074696d657374616d703a20",
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1914:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              "value": " at timestamp: "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 849,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1975:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1981:9:4",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1975:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 847,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "1949:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$485_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1959:15:4",
                                "memberName": "toUtf8BytesUint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 367,
                                "src": "1949:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes memory)"
                                }
                              },
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1949:42:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20696e207468652044617461417373657274657220636f6e7472616374206174203078",
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2009:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              "value": " in the DataAsserter contract at 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 857,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2101:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DETH_$919",
                                        "typeString": "contract DETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DETH_$919",
                                        "typeString": "contract DETH"
                                      }
                                    ],
                                    "id": 856,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2093:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 855,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2093:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2093:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 853,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "2064:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$485_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2074:18:4",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 274,
                                "src": "2064:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2064:43:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2069732076616c69642e",
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2125:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20bfd04ae1bee43451119cb1b01a54a4c3a07e53130737b515dfe8a851c01b90",
                                "typeString": "literal_string \" is valid.\""
                              },
                              "value": " is valid."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b89fa06ccacc6bb6ec543f97be1fffceaa943ee6d48b9cf87df6a9b988d16e04",
                                "typeString": "literal_string \"CLAIM: File in IPFS hash 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_172c3fd2228019efb98ec3f2a2c5a66fc125235737bab9a879e7fcead43f4104",
                                "typeString": "literal_string \" proves the death of a person who fulfills the hash 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4b0400798a3acf62cc5eeef3851dec9ab2b93bda77b3e6c708104a18261ef4db",
                                "typeString": "literal_string \" with asserter: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20bfd04ae1bee43451119cb1b01a54a4c3a07e53130737b515dfe8a851c01b90",
                                "typeString": "literal_string \" is valid.\""
                              }
                            ],
                            "expression": {
                              "id": 822,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1553:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1557:12:4",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1553:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1553:598:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 862,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2165:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2169:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2165:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 866,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2208:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DETH_$919",
                                "typeString": "contract DETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DETH_$919",
                                "typeString": "contract DETH"
                              }
                            ],
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2200:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 864,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2200:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2200:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2255:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2247:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 868,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2247:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2247:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_3600_by_1",
                                "typeString": "int_const 3600"
                              },
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3630",
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2293:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_60_by_1",
                                  "typeString": "int_const 60"
                                },
                                "value": "60"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3630",
                                "id": 873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2296:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_60_by_1",
                                  "typeString": "int_const 60"
                                },
                                "value": "60"
                              },
                              "src": "2293:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3600_by_1",
                                "typeString": "int_const 3600"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2299:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "2293:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2302:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "2293:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 880,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "2335:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 879,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "2328:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2328:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 882,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "2387:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 883,
                          "name": "defaultIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "2414:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2473:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2465:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 884,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2465:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2465:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 820,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "1525:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1528:11:4",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 586,
                        "src": "1525:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$77_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1525:973:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1503:995:4"
                  }
                ]
              },
              "functionSelector": "462f849c",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "startClaimWithMinBond",
              "nameLocation": "1076:21:4",
              "parameters": {
                "id": 767,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 762,
                    "mutability": "mutable",
                    "name": "id",
                    "nameLocation": "1106:2:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "1098:10:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 761,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1098:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 764,
                    "mutability": "mutable",
                    "name": "ipfsHash",
                    "nameLocation": "1118:8:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "1110:16:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 763,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1110:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 766,
                    "mutability": "mutable",
                    "name": "tokenAddress",
                    "nameLocation": "1136:12:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 891,
                    "src": "1128:20:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 765,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1128:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1097:52:4"
              },
              "returnParameters": {
                "id": 768,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1164:0:4"
              },
              "scope": 919,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 912,
              "nodeType": "FunctionDefinition",
              "src": "2555:672:4",
              "nodes": [],
              "body": {
                "id": 911,
                "nodeType": "Block",
                "src": "2643:584:4",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 899,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2661:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2665:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2661:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 903,
                                "name": "oo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 696,
                                "src": "2683:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                                  "typeString": "contract OptimisticOracleV3Interface"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$679",
                                  "typeString": "contract OptimisticOracleV3Interface"
                                }
                              ],
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2675:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 901,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2675:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2675:11:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2661:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 898,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "2653:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2653:34:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 907,
                    "nodeType": "ExpressionStatement",
                    "src": "2653:34:4"
                  },
                  {
                    "condition": {
                      "id": 908,
                      "name": "assertedTruthfully",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 895,
                      "src": "2776:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 910,
                    "nodeType": "IfStatement",
                    "src": "2772:54:4",
                    "trueBody": {
                      "id": 909,
                      "nodeType": "Block",
                      "src": "2796:30:4",
                      "statements": []
                    }
                  }
                ]
              },
              "functionSelector": "f1b156b2",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "assertionResolvedCallback",
              "nameLocation": "2564:25:4",
              "parameters": {
                "id": 896,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 893,
                    "mutability": "mutable",
                    "name": "assertionId",
                    "nameLocation": "2598:11:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 912,
                    "src": "2590:19:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 892,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2590:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 895,
                    "mutability": "mutable",
                    "name": "assertedTruthfully",
                    "nameLocation": "2616:18:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 912,
                    "src": "2611:23:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 894,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2611:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2589:46:4"
              },
              "returnParameters": {
                "id": 897,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2643:0:4"
              },
              "scope": 919,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 918,
              "nodeType": "FunctionDefinition",
              "src": "3424:65:4",
              "nodes": [],
              "body": {
                "id": 917,
                "nodeType": "Block",
                "src": "3487:2:4",
                "nodes": [],
                "statements": []
              },
              "functionSelector": "d448a4ec",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "assertionDisputedCallback",
              "nameLocation": "3433:25:4",
              "parameters": {
                "id": 915,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 914,
                    "mutability": "mutable",
                    "name": "assertionId",
                    "nameLocation": "3467:11:4",
                    "nodeType": "VariableDeclaration",
                    "scope": 918,
                    "src": "3459:19:4",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 913,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3459:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3458:21:4"
              },
              "returnParameters": {
                "id": 916,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3487:0:4"
              },
              "scope": 919,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            }
          ],
          "abstract": false,
          "baseContracts": [],
          "canonicalName": "DETH",
          "contractDependencies": [],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            919
          ],
          "name": "DETH",
          "nameLocation": "273:4:4",
          "scope": 920,
          "usedErrors": []
        }
      ],
      "license": "GPL-3.0"
    },
    "id": 4
  }]; // Replace with your contract ABI

  const onSubmitHandler = async (event) => {
    event.preventDefault();
    const form = event.target;
    const files = form[0].files;

    if (!files || files.length === 0) {
      return alert('No files selected');
    }

    const file = files[0];

    try {
      // Upload files to IPFS
      const result = await ipfs.add(file);

      // Update state with the IPFS URL
      const newImage = {
        cid: result.cid,
        path: result.path,
      };
      setUploadedImages([...uploadedImages, newImage]);
      const generatedIpfsUrl = `https://skywalker.infura-ipfs.io/ipfs/${newImage.path}`;

      // Call the smart contract function with the generated IPFS URL
      await startClaimWithMinBond(generatedIpfsUrl);

      console.log('IPFS URL:', generatedIpfsUrl);
    } catch (error) {
      console.error('Error uploading to IPFS:', error);
    }

    form.reset();
  };

  // Function to call the smart contract function
  const startClaimWithMinBond = async (ipfsUrl) => {
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();

    // Create a contract instance
    const contract = new ethers.Contract(contractAddress, contractAbi, signer);

    try {
      // Assume your smart contract has a function named 'startClaimWithMinBond'
      const tx = await contract.startClaimWithMinBond(1, 123 /* Replace with your IPFS hash or other parameter */, 'YOUR_TOKEN_ADDRESS');
      await tx.wait();
      console.log('Transaction mined:', tx.hash);
    } catch (error) {
      console.error('Error calling smart contract function:', error);
    }
  };

  return (
    <div className="app">
      <div className="app__container">
        {ipfs ? (
          <div className="container">
            <h1>IPFS uploader</h1>
            <form onSubmit={onSubmitHandler}>
              <label htmlFor="file-upload" className="custom-file-upload">
                Select File
              </label>
              <input id="file-upload" type="file" name="file" />
              <button className="button" type="submit">
                Upload file
              </button>
            </form>
          </div>
        ) : null}
        <div className="data">
          {uploadedImages.map((image, index) => (
            <div key={image.cid.toString() + index}>
              {/* ... (display uploaded images) */}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default App;
